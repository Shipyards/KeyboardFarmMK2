Copyright 2024 Jacob T. Ray

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

ZTRFIO - ZTR engine file abstraction
Binary only

This class is the ZTR engine's file manager system, it opens a Fstream to the files and absracts all reading and writing to the file.

Notes:
as of 1/26/2024 ZTFIO lacks multithreaded compaltibility
Fstream only has one pointer that is used by both the read and write function; ZTRFIO abstracts the read and write pointers

member variables:
public std::string filename | stores the actual name of the file ex. "example.bin"
private std::streampos lastpos | stores last stream positon after moving the pointer
private std::streampos writepos | stores abstract positon of the write pointer
private std::streampos readpos | stores the abstract position of the read pointer


member functions:
constructor(std::string filenamein) | will add ".bin" to the end of the string if the 4th from last character isn't '.'
deconstuctor()
[stream pointer manager functions]
void ptr_tostart() | moves the Fstream pointer to the start of the file, saves last position
void ptr_toend() | moves the Fstream pointer to the end of the file, saves last position
void ptr_toread() | moves the Fstream pointer to the read position, saves last position
void ptr_towrite() | mvoes the Fstream pointer to the write position, savles last position
